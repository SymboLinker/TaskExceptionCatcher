<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <Version>1.0.1</Version>
	  <Description>Use Catcher.Run(() => ...) for preventing a task to throw during a "one-fails-all" operation like Task.WhenAll or AwaitMultiple.</Description>
	  <PackageProjectUrl>https://github.com/Symbolinker/TaskExceptionCatcher#readme</PackageProjectUrl>
	  <RepositoryUrl>https://github.com/Symbolinker/TaskExceptionCatcher#readme</RepositoryUrl>
	  <PackageTags>async; await; multiple; tasks; task; return; value; values; parallel; catch; continue; exclude</PackageTags>
	  <Copyright>Symbolinker</Copyright>
	  <Authors>Symbolinker</Authors>
	  <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
	  <PackageReadmeFile>README.md</PackageReadmeFile>
	  <TargetFramework>netstandard2.0</TargetFramework>
	  <LangVersion>latest</LangVersion>
	  <ImplicitUsings>enable</ImplicitUsings>
	  <Nullable>enable</Nullable>
	  <PackageIcon>Circle.png</PackageIcon>
	  <PackageReleaseNotes>
		  v1.0.1: fix typo in package name ("Tast" => "Task").
	  </PackageReleaseNotes>
  </PropertyGroup>

	<ItemGroup>
		<None Include="..\Circle.png" Pack="true" PackagePath="\" />
		<None Include="..\LICENSE.txt" Pack="true" PackagePath="\" />
		<None Include="..\README.md" Pack="true" PackagePath="\" />
	</ItemGroup>
</Project>
